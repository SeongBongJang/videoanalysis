'use strict'



/**
 * @class       Worker
 * @classdesc   비즈니스 로직을 처리하는 Worker
 * @abstract    
 * @extends     events
 * @since       1.0.0
 * @date        2020-01-22
*/

/** Events **/
/**
 * @event       Worker#exec
 * @desc        worker가 job 실행시 발생하는 이벤트
 * @param       {Job}               job                 작업을 실행한 Job instance
 * @param       {Worker}            worker              작업을 실행한 Worker instance
*/
/**
 * @event       Worker#stop
 * @desc        worker가 job 실행 중지시 발생하는 이벤트
 * @param       {Job}               job                 작업을 중지한 Job instance
 * @param       {Worker}            worker              작업을 중지한 Worker instance
*/
/**
 * @event       Worker#end
 * @desc        worker가 job 종료시 발생하는 이벤트
 * @param       {Job}               job                 작업을 종료한 Job instance
 * @param       {Worker}            worker              작업을 종료한 Worker instance
*/
/**
 * @event       Worker#error
 * @desc        job 실행 실패시 발생하는 이벤트
 * @param       {Error}             err                 Error instance
 * @param       {Job}               job                 작업을 실패한 Job instance
 * @param       {Worker}            worker              작업을 실패한 Worker instance
*/

class Worker extends require('events') {
    constructor (job) {
        super()

        // job
        Object.defineProperties(
            this,
            {
                /**
                 * @name        _job
                 * @memberof    Worker
                 * @desc        job
                 * @type        {Job}
                 * @private
                 * @instance
                 * @since       1.0.0
                 * @date        2020-01-30
                */
                _job: {
                    writable: true,
                    value: job
                }
            })
    }

    /**
     * @name        get:job
     * @memberof    Worker
     * @desc        job 리턴
     * @function
     * @public
     * @instance
     * @returns     {Job}    Job
     * @since       1.0.0
     * @date        2020-01-30
    */
    get job () {
        return this._job
    }

    /**
     * @name        set:job
     * @memberof    Worker
     * @desc        job 설정
     * @function
     * @public
     * @instance
     * @since       1.0.0
     * @date        2020-01-30
    */
    set job (job) {
        job && (this._job = job)
    }

    /**
     * @name        exec
     * @memberof    Worker
     * @desc        Worker exec event emit 필요
     * @function
     * @public
     * @instance
     * @fires       Worker#exec
     * @since       1.0.0
     * @date        2020-01-30
    */
    exec () {
        // this.job = job;
        this.emit('exec', this.job, this)
    }

    /**
     * @name        stop
     * @memberof    Worker
     * @desc        Worker stop event emit 필요
     * @function
     * @public
     * @instance
     * @fires       Worker#stop
     * @since       1.0.0
     * @date        2020-01-30
    */
    stop () {
        this.emit('stop', this.job, this)
    }
}

module.exports = exports = Worker
