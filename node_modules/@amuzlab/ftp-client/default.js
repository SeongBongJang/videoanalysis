'use strict'

/**
 * @module      default
 * @since       0.0.1
 * @desc        default모듈은 ftp-client 모듈의 기본 설정값을 정의한 읽기 전용 모듈로, ftp-client 모듈 내부에서 사용<br/>
 *              attrName : 설정 데이터 전달 시, 설정 값을 읽기 위한 속성명 정의<br/>
 *              type, range : 설정 데이터 전달 시, 내부적으로 유효성 체크를 위해 정의<br/>
 *              value : 해당 설정의 기본값 정의<br/>
 *              정의된 내용은 FtpClient class의 config setter에서 사용
 * @author      예장해
 * @date        2019-01-23
 * @example
 * // 추가 설정 정의
 * create(
 *     {
 *         ...,
 *     // string 타입의 설정 정의
 *     STRING_ADD_ATTR: create(
 *         {
 *             attrName: 'stringAddAttr',
 *             type: 'string',
 *             value: 'default value'
 *         }),
 *     // 숫자 타입의 설정 정의
 *     NUMBER_ADD_ATTR: create(
 *         {
 *             attrName: 'numberAddAttr',
 *             type: 'integer',         // integer 또는 number
 *             range: [0, 10]           // range는 없어도 됨
 *             value: 0
 *         }),
 *     // Boolean 타입의 설정 정의
 *     BOOLEAN_ADD_ATTR: create(
 *         {
 *             attrName: 'booleanAddAttr',
 *             type: 'boolean',
 *             value: false
 *         }),
 *     // Object 타입의 설정 정의
 *     OBJECT_ADD_ATTR: create(
 *         {
 *             attrName: 'objectAddAttr',
 *             type: 'object',
 *             value: {}         // {}, null, undefined 가능
 *         }))
*/

create(
    {
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 host 설정의 기본값, 타입, 속성명 정의
         * @type        {Object}
         * @default     '127.0.0.1'
         * @prop        {String}    HOST.attrName=host      - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 host 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    HOST.type=string        - HOST 값의 타입 정의
         * @prop        {String}    HOST.value=127.0.01     - HOST 기본값
        */
        HOST: create({
            attrName: 'host',
            type: 'string',
            value: '127.0.0.1'
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 port 설정의 기본값, 타입, 범위, 속성명 정의
         * @type        {Object}
         * @default     21
         * @prop        {String}    PORT.attrName=port  - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 port 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    PORT.type=integer   - PORT 값의 타입 정의
         * @prop        {Integer[]} PORT.range=0-65535  - PORT 값의 범위 정의
         * @prop        {Integer}   PORT.value=21       - PORT 기본값
        */
        PORT: create({
            attrName: 'port',
            type: 'integer',
            range: [0, 66535],
            value: 21
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 secure 설정의 기본값, 타입, 속성명 정의
         * @type        {Boolean}
         * @default     false
         * @prop        {String}    SECURE.attrName=secure  - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 secure 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    SECURE.type=boolean     - SECURE 값의 타입 정의
         * @prop        {Boolean}   SECURE.value=false      - SECURE 기본값
        */
        SECURE: create({
            attrName: 'secure',
            type: 'boolean',
            value: false
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 secureOptions 설정의 기본값, 타입, 속성명 정의<br/>
         *              SECURE 옵션이 true인 경우에 적용
         * @type        {Object}
         * @default     undefined
         * @prop        {String}    SECURE_OPTIONS.attrName=secureOptions   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 secureOptions 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    SECURE_OPTIONS.type=object              - SECURE_OPTIONS 값의 타입 정의
         * @prop        {undefined} SECURE_OPTIONS.value=undefined          - SECURE_OPTIONS 기본값
        */
        SECURE_OPTIONS: create({
            attrName: 'secureOptions',
            type: 'object',
            value: undefined
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 user 설정의 기본값, 타입, 속성명 정의
         * @type        {Object}
         * @default     anonymous
         * @prop        {String}    USER.attrName=user      - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 user 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    USER.type=string        - USER 값의 타입 정의
         * @prop        {String}    USER.value=anonymous    - USER 기본값
        */
        USER: create({
            attrName: 'user',
            type: 'string',
            value: 'anonymous'
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 password 설정의 기본값, 타입, 속성명 정의
         * @type        {Object}
         * @default     anonymous@
         * @prop        {String}    PASSWORD.attrName=password  - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 password 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    PASSWORD.type=string        - PASSWORD 값의 타입 정의
         * @prop        {String}    PASSWORD.value=anonymous@   - PASSWORD 기본값
        */
        PASSWORD: create({
            attrName: 'password',
            type: 'string',
            value: 'anonymous@'
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 connTimeout 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              milliseconds 단위 설정
         * @type        {Integer}
         * @default     10000
         * @prop        {String}    CONN_TIMEOUT.attrName=connTimeout   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 connTimeout 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    CONN_TIMEOUT.type=integer           - CONN_TIMEOUT 값의 타입 정의
         * @prop        {Integer[]} CONN_TIMEOUT.range=0-Infinity       - CONN_TIMEOUT 값의 범위 정의
         * @prop        {Integer}   CONN_TIMEOUT.value=10000            - CONN_TIMEOUT 기본값 (milliseconds)
        */
        CONN_TIMEOUT: create({
            attrName: 'connTimeout',
            type: 'integer',
            range: [0],
            value: 10000
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 pasvTimeout 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              milliseconds 단위 설정
         * @type        {Integer}
         * @default     10000
         * @prop        {String}    PASV_TIMEOUT.attrName=pasvTimeout   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 pasvTimeout 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    PASV_TIMEOUT.type=integer           - PASV_TIMEOUT 값의 타입 정의
         * @prop        {Integer[]} PASV_TIMEOUT.range=0-Infinity       - PASV_TIMEOUT 값의 범위 정의
         * @prop        {Integer}   PASV_TIMEOUT.value=10000            - PASV_TIMEOUT 기본값 (milliseconds)
        */
        PASV_TIMEOUT: create({
            attrName: 'pasvTimeout',
            type: 'integer',
            range: [0],
            value: 10000
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 keepalive 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              milliseconds 단위 설정
         * @type        {Integer}
         * @default     10000
         * @prop        {String}    KEEPALIVE.attrName=keepalive    - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 keepalive 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    KEEPALIVE.type=integer          - KEEPALIVE 값의 타입 정의
         * @prop        {Integer[]} KEEPALIVE.range=0-Infinity      - KEEPALIVE 값의 범위 정의
         * @prop        {Integer}   KEEPALIVE.value=10000           - KEEPALIVE 기본값 (milliseconds)
        */
        KEEPALIVE: create({
            attrName: 'keepalive',
            type: 'integer',
            range: [0],
            value: 10000
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 fail count clear time 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              milliseconds 단위 설정<br/>
         *              값이 0이면, 재시도 성공 즉시 failCount를 0으로 세팅
         * @type        {Integer}
         * @default     10000
         * @prop        {String}    CLEAR_FAIL_COUNT_TIME.attrName=clearFailCountTime   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 clearFailCountTime 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    CLEAR_FAIL_COUNT_TIME.type=integer                  - CLEAR_FAIL_COUNT_TIME 값의 타입 정의
         * @prop        {Integer[]} CLEAR_FAIL_COUNT_TIME.range=0-Infinity              - CLEAR_FAIL_COUNT_TIME 값의 범위 정의
         * @prop        {Integer}   CLEAR_FAIL_COUNT_TIME.value=1000                    - CLEAR_FAIL_COUNT_TIME 기본값 (milliseconds)
        */
        CLEAR_FAIL_COUNT_TIME: create({
            attrName: 'clearFailCountTime',
            type: 'integer',
            range: [0],
            value: 1000
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 retryCount 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              값이 0이면 재시도 안함
         * @type        {Integer}
         * @default     0
         * @prop        {String}    RETRY_COUNT.attrName=retryCount   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 retryCount 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    RETRY_COUNT.type=integer          - RETRY_COUNT 값의 타입 정의
         * @prop        {Integer[]} RETRY_COUNT.range=0-Infinity      - RETRY_COUNT 값의 범위 정의
         * @prop        {Integer}   RETRY_COUNT.value=0               - RETRY_COUNT 기본값
        */
        RETRY_COUNT: create({
            attrName: 'retryCount',
            type: 'integer',
            range: [0],
            value: 0
        }),
        /**
         * @since       0.0.1
         * @author      예장해
         * @date        2019-01-23
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 retryInterval 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              milliseconds 단위 설정<br/>
         *              값이 0이면 즉시 재시도
         * @type        {Integer}
         * @default     0
         * @prop        {String}    RETRY_INTERVAL.attrName=retryInterval   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 retryInterval 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    RETRY_INTERVAL.type=integer             - RETRY_INTERVAL 값의 타입 정의
         * @prop        {Integer[]} RETRY_INTERVAL.range=0-Infinity         - RETRY_INTERVAL 값의 범위 정의
         * @prop        {Integer}   RETRY_INTERVAL.value=1000               - RETRY_INTERVAL 기본값 (milliseconds)
        */
        RETRY_INTERVAL: create({
            attrName: 'retryInterval',
            type: 'integer',
            range: [0],
            value: 1000
        }),
        /**
         * @since       1.0.3
         * @author      예장해
         * @date        2019-02-12
         * @readonly
         * @static
         * @public
         * @desc        ftp-client 모듈의 retryInterval 설정의 기본값, 타입, 범위, 속성명 정의<br/>
         *              {@llink ftp-client~FtpClent FtpClient} 인스턴스 생성시, true면 바로 컨넥션을 시도하고 false면 컨넥션을 시도하지 않음<br/>
         * @type        {Boolean}
         * @default     false
         * @prop        {String}    RETRY_INTERVAL.attrName=isConnect   - 모듈에 설정 데이터 전달시, ftp-client 모듈 내의 isConnect 속성에 대해 매핑되는 속성명 정의
         * @prop        {String}    RETRY_INTERVAL.type=boolean         - IS_CONNECT 값의 타입 정의
         * @prop        {Integer}   RETRY_INTERVAL.value=false          - IS_CONNECT 기본값 (milliseconds)
        */
        IS_CONNECT: create({
            attrName: 'retryInterval',
            type: 'integer',
            range: [0],
            value: 1000
        })
    },
    exports)

/**
 * @since   1.0.0
 * @author  예장해
 * @date    2019-02-03
 * @function
 * @private
 * @static
 * @name    create
 * @desc    전달된 속성명 및 속성값을 가진 새로운 Object를 생성<br/>
 *          2번째 인자로 Object가 전달되면, 전달된 Object에 속성 적용<br/>
 *          속성은 Object에 readonly property로 적용<br/>
 *          <ul>
 *              <li>enumerable: ture
 *              <li>writable: false
 *              <li>configurable: false
 *          <ul/>
 * @example
 * // 1. 새로운 Object 생성
 * create({
 *     HOST: '127.0.0.1'
 * })
 * // 새로운 Object {HOST: '127.0.0.1'} 리턴
 * // 2. exports에 속성 적용
 * create(
 *     {
 *         HOST: '127.0.0.1'
 *     },
 *     exports)
 * // exports에 HOST 속성 적용 exports.HOST = '127.0.0.1'
 * @param   {Object} args               - 생성할 Object의 속성명 및 속성값 정의<br/>
 *                                        args Object의 속성명, 속성값이 readonly로 세팅
 * @param   {Object?} [obj=new Object]  - 전달된 args의 속성 및 속성값을 적용할 Object<br/>
 *                                        obj에 값이 전달되지 않으면 새로운 Object를 생성
 * @return  {Object}                      전달된 args의 속성 및 속성값이 적용된 Object
 * @throws  {Error}                       args parameter에 전달된 값이 없으면 Error를 던짐
*/
function create (args, obj) {
    let _obj

    if (!args) {
        throw new Error('args parameter가 없습니다.')
    }

    _obj = obj ? obj : {}

    for (let attrName in args) {
        Object.defineProperty(
            _obj,
            attrName,
            {
                enumerable: true,
                value: args[attrName]
            })
    }

    return _obj
}
