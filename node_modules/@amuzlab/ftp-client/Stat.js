'use strict'

const path = require('path'),

    TYPE = {
        FILE: '-',
        DIRECTORY: 'd'
    }

/**
 * @alias       ftp-client~Stat
 * @classdesc   {@link https://www.npmjs.com/package/ftp ftp} 모듈의 파일 조회 정보를 래핑한 클래스
 * @since       1.0.0
 * @author      예장해
 * @date        2019-02-06
 * @todo        recursive 기능을 위한 sub 포함 구조 구현
 * @see         {@link https://www.npmjs.com/package/ftp ftp-0.3.10}
 * @requires    {@link https://nodejs.org/en/docs/ Node.js 0.10.x 이상 버전}
*/
class Stat {
    constructor (statData, dirPath) {

        dirPath = typeof dirPath === 'string' ? dirPath : '.'

        Object.defineProperties(
            this,
            {
                /**
                 * @member      {String}    name    - 파일 또는 디렉터리명
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                name: {
                    enumerable: true,
                    value: statData.name
                },
                /**
                 * @member      {String}    dirPath - 파일 또는 디렉터리의 상위 경로
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                dirPath: {
                    enumerable: true,
                    value: dirPath
                },
                /**
                 * @member      {String}    path    - 파일 또는 디렉터리의 전체 경로
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                path: {
                    enumerable: true,
                    value: path.posix.join(dirPath, statData.name)
                },
                /**
                 * @member      {String}    path    - 파일 또는 디렉터리의 전체 경로
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                size: {
                    enumerable: true,
                    value: statData.size
                },
                /**
                 * @member      {String}    uid     - 파일 또는 디렉터리의 UID
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                uid: {
                    enumerable: true,
                    value: statData.owner
                },
                /**
                 * @member      {String}    Gid     - 파일 또는 디렉터리의 GID
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                gid: {
                    enumerable: true,
                    value: statData.group
                },
                /**
                 * @member      {Object}    raw     - 내부 라이브러리에서 전달된 래핑 전의 raw 데이터
                 * @memberof    ftp-client~Stat
                 * @public
                 * @readonly
                 * @instance
                 * @since       1.0.0
                 * @author      예장해
                 * @date        2019-02-06
                */
                raw: {
                    enumerable: true,
                    value: statData
                }
            })
    }

    /**
     * @name        ftp-client~Stat#get:isFile
     * @function
     * @public
     * @instance
     * @desc        해당 파일이 디렉터리이면 true, 아니면 false 리턴
     * @return      {Boolean}   해당 파일이 파일이면 true, 아니면 false 리턴
     * @since       1.0.0
     * @author      예장해
     * @date        2019-02-06
    */
    get isFile () {
        return this.raw.type === TYPE.FILE
    }

    /**
     * @name        ftp-client~Stat#get:isDirectory
     * @function
     * @public
     * @instance
     * @desc        해당 파일이 디렉터리이면 true, 아니면 false 리턴
     * @return      {Boolean}   해당 파일이 디렉터리이면 true, 아니면 false 리턴
     * @since       1.0.0
     * @author      예장해
     * @date        2019-02-06
    */
    get isDirectory () {
        return this.raw.type === TYPE.DIRECTORY
    }

    /**
     * @name        ftp-client~Stat#forEach
     * @function
     * @public
     * @instance
     * @desc        sub 파일 또는 디렉터리를 순회하면서 전달된 콜백 호출<br/>
     *              아직 미구현
     * @param       {Function}  - sub 파일 또는 디렉터리를 순회하면서 호출되는 콜백
     * @todo        sub 파일 또는 디렉터리를 순회하는  기능
    */
    forEach (callback) {
    }
}

module.exports = exports = Stat
