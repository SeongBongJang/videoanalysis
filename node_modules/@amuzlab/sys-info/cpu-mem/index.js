'use strict'

const { exec } = require('child_process')

/**
 * @module  cpu-mem
 * @desc    cpu, memory 관련 모듈<br/>
 * @public
 * @since   1.1.0
*/

Object.defineProperties(
    exports,
    {
        /**
         * @name        getProcessUsage
         * @desc        process CPU, MEM 사용량 리턴
         * @function
         * @static
         * @public
         * @param       {Number}    pid     host에 설치된 gpu 리스트
         * @returns     {Object}    usage   process 리소스 사용량
         * @throws      {Error}     전달된 pid 없음
         * @since       1.1.0
        */
        getProcessUsage: {
            enumerable: true,
            value: pid => {
                return new Promise((resolve, reject) => {
                    typeof pid === 'number' ? exec(
                        `ps -p ${pid} -o pcpu,pmem --no-headers`,
                        (err, stdout, stderr) => {
                            try {
                                if (err) {
                                    throw err
                                } else {
                                    resolve(stdout
                                        .trim()
                                        .match(/\d{1,}.\d{1,}/gi)
                                        .reduce(
                                            (usage, str, index) => {
                                                str = parseFloat(str)

                                                switch (index) {
                                                    case 0:
                                                        usage.cpu = str
                                                        break
                                                    case 1:
                                                        usage.mem = str
                                                        break
                                                }

                                                return usage
                                            },
                                            {
                                                cpu: 0,
                                                mem: 0
                                            }))
                                }
                            } catch (err) {
                                err.pid = pid
                                reject(err)
                            }
                        }) : reject(new Error(`no parameter pid (pid : ${pid})`))
                })
            }
        }
    })
