'use strict'

/**
 * @module      gpu/abstract-gpu-module
 * @desc        gpu monitor 구현 모듈들이 상속하여 재정의 해야할 모듈
 * @since       1.0.0
 * @date        2020-01-16
*/
Object.defineProperties(
    exports,
    {
        /**
         * @name    get:gpus
         * @desc    gpu 상태 정보 조회
         * @function
         * @static
         * @public
         * @abstract
         * @returns {Promise<Object>}   gpu 정보
         * @since   1.0.0
         * @date    2020-01-16
         * @see     {@link https://developer.nvidia.com/nvidia-system-management-interface nvidia-smi}
        */
        gpus: {
            enumerable: true,
            configurable: true,
            get: () => {
                throw new Error('overriding this function')
            }
        },
        /**
         * @name    getGPU
         * @desc    전달된 기준으로 gpu 정보 조회
         * @function
         * @static
         * @public
         * @abstract
         * @param
         * @param   {Function|Number|String}    algorithm   - gpu 정보를 조회할 기준<br/>
         *                                                    <ul>
         *                                                      <li>Function : callback 함수가 true를 리턴하는 GPU의 정보를 리턴 (parameter : gpu)</li>
         *                                                      <li>Number : deviceNo가 전달된 값과 동일한 GPU 정보 리턴</li>
         *                                                      <li>String : 정의된 Load balancing algorithm을 사용하여 GPU 정보 리턴</li>
         *                                                    </ul>
         * @returns {Object}    gpu     전달된 기준에 의해 조회된 GPU 정보
         * @since   1.0.0
         * @date    2020-01-16
         * @see     algorithm
         *          <ul>
         *            <li>ROUND_ROBIN : GPU index를 기억하고 index를 증가하면서 GPU를 리턴</li>
         *            <li>PROCESS_COUNT : GPU에 할당된 프로세스 개수가 제일 적은 GPU를 리턴</li>
         *            <li>MEMORY_USAGE : 메모리 사용량이 가장 적은 GPU를 리턴</li>
         *          </ul>
        */
        getGPU: {
            enumerable: true,
            configurable: true,
            value: algorithm => {
                throw new Error('overriding this function')
            }
        }
    })
