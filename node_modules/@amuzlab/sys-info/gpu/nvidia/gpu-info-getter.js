'use strict'

/**
 * @module      gpu/nvidia/gpu-info-getter
 * @desc        nvidia-smi를 통해 GPU 정보를 조회
 * @since       1.0.0
 * @date        2020-01-16
 * @see         {@link https://developer.download.nvidia.com/compute/DCGM/docs/nvidia-smi-367.38.pdf nvidia-smi}
*/

const path = require('path'),
    os = require('os'),
    exec = require('child_process').exec,
    uuidv1 = require('uuid/v1'),

    fsPromise = require('@amuzlab/fs-promise'),
    utils = require('@amuzlab/utils'),

    config = require('../../config'),
    xmlParser = require('./xml-parser'),
    abstractGPUModule = require('../abstract-gpu-module'),

    DRIVER_COMMAND = 'nvidia-smi',
    PREFIX = 'amuzlab-sys-info-nvidia'

Object.defineProperties(
    exports,
    {
        /**
         * @name    gpus
         * @desc    gpu 상태 정보 조회
         * @function
         * @static
         * @public
         * @returns {Promise<Object>}   gpu 정보
         * @since   1.0.0
         * @date    2020-01-16
        */
        gpus: {
            get: () => {
                const tempFilePath = path.join(os.tmpdir(), `${PREFIX}-${uuidv1()}.xml`)

                return new Promise((resolve, reject) => {
                    exec(
                        `${DRIVER_COMMAND} -q -x -f ${tempFilePath}`,
                        (err, stdout, stderr) => {
                            if (err) {
                                err.stderr = stderr
                                reject(err)
                            } else {
                                fsPromise.fileSystem.readFile(
                                    tempFilePath,
                                    'utf8')
                                    .then(result => xmlParser.parseGPUInfo(result.data, config))
                                    .then(data => fsPromise.fs.unlink(tempFilePath, err => resolve(data)))
                            }
                        })
                })
            }
        }
    })
