'use strict'

/**
 * @module      signal
 * @since       0.0.1
 * @desc        POSIX에 정의된 standard signal들을 정의한 모듈
 * @date        2019-12-30
 * @see         {@link http://man7.org/linux/man-pages/man7/signal.7.html signal(7)}
*/
Object.defineProperties(
    exports,
    {
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Timer signal from alarm(2)
         * @type        {String}
         * @default     SIGABRT
        */
        SIGABRT: {
            enumerable: true,
            value: 'SIGABRT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Timer signal from alarm(2)
         * @type        {String}
         * @default     SIGALRM
        */
        SIGALRM: {
            enumerable: true,
            value: 'SIGALRM'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Bus error (bad memory access)
         * @type        {String}
         * @default     SIGBUS
        */
        SIGBUS: {
            enumerable: true,
            value: 'SIGBUS'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Child stopped or terminated
         * @type        {String}
         * @default     SIGCHLD
        */
        SIGCHLD: {
            enumerable: true,
            value: 'SIGCHLD'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        A synonym for SIGCHLD
         * @type        {String}
         * @default     SIGCLD
        */
        SIGCLD: {
            enumerable: true,
            value: 'SIGCLD'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Continue if stopped
         * @type        {String}
         * @default     SIGCONT
        */
        SIGCONT: {
            enumerable: true,
            value: 'SIGCONT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Emulator trap
         * @type        {String}
         * @default     SIGEMT
        */
        SIGEMT: {
            enumerable: true,
            value: 'SIGEMT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Floating-point exception
         * @type        {String}
         * @default     SIGFPE
        */
        SIGFPE: {
            enumerable: true,
            value: 'SIGFPE'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Hangup detected on controlling terminal or death of controlling process
         * @type        {String}
         * @default     SIGHUP
        */
        SIGHUP: {
            enumerable: true,
            value: 'SIGHUP'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Illegal Instruction
         * @type        {String}
         * @default     SIGILL
        */
        SIGILL: {
            enumerable: true,
            value: 'SIGILL'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        A synonym for SIGPWR
         * @type        {String}
         * @default     SIGINFO
        */
        SIGINFO: {
            enumerable: true,
            value: 'SIGINFO'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Interrupt from keyboard
         * @type        {String}
         * @default     SIGINT
        */
        SIGINT: {
            enumerable: true,
            value: 'SIGINT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        I/O now possible (4.2BSD)
         * @type        {String}
         * @default     SIGIO
        */
        SIGIO: {
            enumerable: true,
            value: 'SIGIO'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        IOT trap. A synonym for SIGABRT
         * @type        {String}
         * @default     SIGIOT
        */
        SIGIOT: {
            enumerable: true,
            value: 'SIGIOT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Kill signal
         * @type        {String}
         * @default     SIGKILL
        */
        SIGKILL: {
            enumerable: true,
            value: 'SIGKILL'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        File lock lost (unused)
         * @type        {String}
         * @default     SIGLOST
        */
        SIGLOST: {
            enumerable: true,
            value: 'SIGLOST'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Broken pipe: write to pipe with no readers;<br/>
         *              see pipe(7)
         * @type        {String}
         * @default     SIGPIPE
        */
        SIGPIPE: {
            enumerable: true,
            value: 'SIGPIPE'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Pollable event (Sys V).<br/>
         *              Synonym for SIGIO
         * @type        {String}
         * @default     SIGPOLL
        */
        SIGPOLL: {
            enumerable: true,
            value: 'SIGPOLL'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Profiling timer expired
         * @type        {String}
         * @default     SIGPROF
        */
        SIGPROF: {
            enumerable: true,
            value: 'SIGPROF'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Power failure (System V)
         * @type        {String}
         * @default     SIGPWR
        */
        SIGPWR: {
            enumerable: true,
            value: 'SIGPWR'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Quit from keyboard
         * @type        {String}
         * @default     SIGQUIT
        */
        SIGQUIT: {
            enumerable: true,
            value: 'SIGQUIT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Invalid memory reference
         * @type        {String}
         * @default     SIGSEGV
        */
        SIGSEGV: {
            enumerable: true,
            value: 'SIGSEGV'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Stack fault on coprocessor (unused)
         * @type        {String}
         * @default     SIGSTKFLT
        */
        SIGSTKFLT: {
            enumerable: true,
            value: 'SIGSTKFLT'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Stop process
         * @type        {String}
         * @default     SIGSTOP
        */
        SIGSTOP: {
            enumerable: true,
            value: 'SIGSTOP'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Stop typed at terminal
         * @type        {String}
         * @default     SIGTSTP
        */
        SIGTSTP: {
            enumerable: true,
            value: 'SIGTSTP'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Bad system call (SVr4);<br/>
         *              see also seccomp(2)
         * @type        {String}
         * @default     SIGSYS
        */
        SIGSYS: {
            enumerable: true,
            value: 'SIGSYS'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Termination signal
         * @type        {String}
         * @default     SIGTERM
        */
        SIGTERM: {
            enumerable: true,
            value: 'SIGTERM'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Trace/breakpoint trap
         * @type        {String}
         * @default     SIGTRAP
        */
        SIGTRAP: {
            enumerable: true,
            value: 'SIGTRAP'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Terminal input for background process
         * @type        {String}
         * @default     SIGTTIN
        */
        SIGTTIN: {
            enumerable: true,
            value: 'SIGTTIN'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Terminal output for background process
         * @type        {String}
         * @default     SIGTTOU
        */
        SIGTTOU: {
            enumerable: true,
            value: 'SIGTTOU'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Synonymous with SIGSYS
         * @type        {String}
         * @default     SIGTTOU
        */
        SIGUNUSED: {
            enumerable: true,
            value: 'SIGUNUSED'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Urgent condition on socket (4.2BSD)
         * @type        {String}
         * @default     SIGURG
        */
        SIGURG: {
            enumerable: true,
            value: 'SIGURG'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        User-defined signal 1
         * @type        {String}
         * @default     SIGUSR1
        */
        SIGUSR1: {
            enumerable: true,
            value: 'SIGUSR1'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        User-defined signal 2
         * @type        {String}
         * @default     SIGUSR2
        */
        SIGUSR2: {
            enumerable: true,
            value: 'SIGUSR2'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Virtual alarm clock (4.2BSD)
         * @type        {String}
         * @default     SIGVTALRM
        */
        SIGVTALRM: {
            enumerable: true,
            value: 'SIGVTALRM'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        CPU time limit exceeded (4.2BSD);<br/>
         *              see setrlimit(2)
         * @type        {String}
         * @default     SIGXCPU
        */
        SIGXCPU: {
            enumerable: true,
            value: 'SIGXCPU'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        File size limit exceeded (4.2BSD);<br/>
         *              see setrlimit(2)
         * @type        {String}
         * @default     SIGXFSZ
        */
        SIGXFSZ: {
            enumerable: true,
            value: 'SIGXFSZ'
        },
        /**
         * @since       0.0.1
         * @date        2019-12-30
         * @constant
         * @static
         * @public
         * @desc        Window resize signal (4.3BSD, Sun)
         * @type        {String}
         * @default     SIGWINCH
        */
        SIGWINCH: {
            enumerable: true,
            value: 'SIGWINCH'
        }
    })
