'use strict'

const CODE = require('./code'),
    algorithm = require('./algorithm')

Object.defineProperties(
    exports,
    {
        /**
         * @variation   global
         * @global
         * @name        getGPU
         * @desc        get available gpu device
         * @param       {Object|String=}    options                                 gpu load balancing options<br/>
                                                                                    String 타입의 데이터가 전달되면 options.algorithm 으로 자동 세팅<br/>
                                                                                    options 값이 전달되지 않으면 ROUND_ROBIN algorithm으로 세팅
         * @param       {String=}           [options.algorithm=ROUND_ROBIN]     gpu load balancing algorithm
         * @returns     {Object}            available gpu
         * @function
         * @static
         * @public
         * @readonly
         * @since       0.0.1
        */
        getGPU: {
            enumerable: true,
            value: async options => {
                options || (options = {})
                typeof options === 'string' && (options = { algorithm: options })
                typeof options.algorithm !== 'string' && (options.algorithm = CODE.ALGORITHM.ROUND_ROBIN)

                return await algorithm.getGPU(options)
            }
        }
    })
