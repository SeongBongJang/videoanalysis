'use strict'

/**
 * @module      algorithm
 * @since       0.0.1
 * @desc        사용 가능한 GPU 리스트를 리턴
*/

const CODE = require('../code'),
    roundRobin = require('./round-robin'),
    roundRobinMem = require('./round-robin-mem')

Object.defineProperties(
    exports,
    {
        /**
         * @name        getGPU
         * @desc        get available gpu device
         * @param       {Object|String=}    options                                 gpu load balancing options<br/>
         * @param       {String=}           [options.algorithm=ROUND_ROBIN_MEM]     gpu load balancing algorithm
         * @returns     {Object}            available gpu
         * @throws      {Error}             Not supported load balancing algorithm
         * @function
         * @static
         * @public
         * @readonly
         * @since       0.0.1
        */
        getGPU: {
            enumerable: true,
            value: async options => {
                let gpu, err

                switch (true) {
                    case CODE.isCodeValue(options.algorithm, CODE.ALGORITHM.ROUND_ROBIN_MEM):
                        gpu = await roundRobinMem.getGPU(options)
                        break
                    case CODE.isCodeValue(options.algorithm, CODE.ALGORITHM.ROUND_ROBIN):
                        gpu = await roundRobin.getGPU(options)
                        break
                    default:
                        err = new Error(`Not supported gpu load balancing algorithm (algorithm : ${options.algorithm})`)
                        err.algorithm = options.algorithm
                }

                return gpu
            }
        }
    })
